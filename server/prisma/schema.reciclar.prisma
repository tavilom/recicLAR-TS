generator client {
  provider = "prisma-client-js"
  output   = "./generated/reciclar"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TipoMovimentacao {
  ENTRADA
  SAIDA
}

model Dinheiro {
  id    Int     @id @default(autoincrement())
  tipo  String  @db.VarChar(100)
  valor Decimal @db.Decimal(10, 2)

  // datas
  criadoEm         DateTime @default(now()) @db.Timestamp(0)
  atualizadoEm     DateTime @updatedAt @db.Timestamp(0)
  dataMovimentacao DateTime @db.Timestamp(0)

  // movimentação (entrada ou saída)
  movimentacao TipoMovimentacao

  // relação 1:N com Funcionário
  funcionarios Funcionario[]

  // relação 1:N com Vale
  vales Vale[]

  // relação 1:1 com Mercadoria
  mercadoria   Mercadoria? @relation("DinheiroMercadoria", fields: [mercadoriaId], references: [id])
  mercadoriaId Int?        @unique
}

model Funcionario {
  id           Int      @id @default(autoincrement())
  nome         String   @db.VarChar(100)
  funcao       String   @db.VarChar(100)
  salario      Decimal  @db.Decimal(10, 2)
  criadoEm     DateTime @default(now()) @db.Timestamp(0)
  atualizadoEm DateTime @updatedAt @db.Timestamp(0)

  // cada funcionário pertence a UM dinheiro
  dinheiroId Int
  dinheiro   Dinheiro @relation(fields: [dinheiroId], references: [id])
}

model Vale {
  id             Int      @id @default(autoincrement())
  nome           String   @db.VarChar(100)
  valor          Decimal  @db.Decimal(10, 2)
  dataEmprestimo DateTime @default(now()) @db.Timestamp(0)

  // cada vale pertence a UM dinheiro
  dinheiroId Int
  dinheiro   Dinheiro @relation(fields: [dinheiroId], references: [id])
}

model Mercadoria {
  id            Int     @id @default(autoincrement())
  nome          String  @db.VarChar(100)
  precoCompra   Decimal @db.Decimal(10, 2)
  codigoProduto String  @unique @db.VarChar(100)

  criadoEm     DateTime @default(now()) @db.Timestamp(0)
  atualizadoEm DateTime @updatedAt @db.Timestamp(0)

  // relação 1:1 com Peso
  peso   Peso? @relation("MercadoriaPeso", fields: [pesoId], references: [id])
  pesoId Int?  @unique

  // relação 1:1 com Dinheiro
  dinheiro Dinheiro? @relation("DinheiroMercadoria")
}

model Peso {
  id           Int      @id @default(autoincrement())
  pesoKg       Decimal  @db.Decimal(10, 2)
  dataCadastro DateTime @default(now()) @db.Timestamp(0)

  // relação 1:1 com Mercadoria
  mercadoria Mercadoria? @relation("MercadoriaPeso")
}
